% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hte.R
\name{x_learner}
\alias{x_learner}
\title{Estimate heterogeneous treatment effects (HTEs)
using the X-Learner strategy.}
\usage{
x_learner(
  data,
  x,
  y,
  w,
  base_learner = "regression forest",
  cate_model = "regression forest",
  propensity_model = "logistic",
  plot = TRUE,
  ...
)
}
\arguments{
\item{data}{a dataframe object containing the variables and values.}

\item{x}{a list of character vectors specifying variables to be included in 
the model (columns in the data). If unspecified, then it is assumed to be all 
columns in the data besides y and w.}

\item{y}{a character vector specifying the response variable.}

\item{w}{a character vector specifying the treatment status.}

\item{base_learner}{a character vector specifying the base learner. One of "regression forest"
or "OLS". Default is "regression forest".}

\item{cate_model}{a character vector specifying the model used to estimate the CATE. One of "regression forest"
or "OLS". Default is "regression forest".}

\item{propensity_model}{character string naming the model used to estimate propensity scores (one of "logistic", 
"lasso", or "causal forest").}

\item{plot}{logical; if TRUE, then plots a histogram of treatment effects.}

\item{...}{additional arguments passed to the base learner.}
}
\value{
a list of two. The first element is a vector of conditional average treatment effect for each observation. 
The second element is the estimated average treatment effect.
}
\description{
Estimate heterogeneous treatment effects (HTEs)
using the X-Learner strategy.
}
\details{
Implements the X-learner algorithm proposed in Künzel et al. (2019) for estimating
conditional average treatment effects (CATE). 

In the first stage of the X-learner, the control response
function is estimated using all units in the control group as
\deqn{\mu_0 = E [ Y(0) | X = x],}
and the treatment response function is estimates using all units in the treatment group as
\deqn{\mu_1 = E [ Y(1) | X = x].}
Both \eqn{\mu_0 } and \eqn{\mu_1 } are estimated using any base learner (supervised machine learning or 
regression algorithm). Here we implement the X-learner with linear regression or regression forest 
(see Athey, Tibshirani, and Wager (2016)) as the base learner. 

In the second stage, the treatment effect for each observation is then imputed by estimating the counterfactual
outcome for each observation using the first-stage base learner models:
\deqn{\tilde{D}^1_i := Y^1_i - \hat{\mu}_0(X^1_i)}
and 
\deqn{\tilde{D}^0_i := Y^0_i - \hat{\mu}_0(X^0_i)}
where \eqn{\tilde{D}^1_i} and \eqn{\tilde{D}^1_i} are the imputed treatment effects (two for each observation).
The CATE is then estimated in two ways: 
\deqn{\hat{\tau}_1 = E[\tilde{D}^1 | X = x]}
and 
\deqn{\hat{\tau}_0 = E[\tilde{D}^0 | X = x].}
Currently, we include the option to estimate \eqn{\hat{\tau}_1} and \eqn{\hat{\tau}_0} with linear regression 
or regression forests.

In the third stage, estimate the CATE by a weighted average of the two estimates from the second stage:
\deqn{\hat{\tau} = g(x) \hat{\tau}_0(x) + (1 - g(x)) \hat{\tau}_1(x).}

Here, we choose propensity scores to be the weighting function \eqn{g{x}}.
}
\examples{
data("lalonde")
hte <- x_learner(data = lalonde, y = "re78", w = "treat", num.trees = 100, mtry = 3)

}
\references{
Künzel, Sören R., Jasjeet S. Sekhon, Peter J. Bickel, and Bin Yu. 2019. 
``Metalearners for estimating heterogeneous treatment effects using machine learning." 
\emph{Proceedings of the National Academy of Sciences of the United States of America.}
Mar. 116(10): 4156–4165. \url{https://doi.org/10.1073/pnas.1804597116}

Athey, Susan, Julie Tibshirani, and Stefan Wager. 2016. ``Generalized Random Forests."
Working paper; Forthcoming in the Annals of Statistics. \url{https://arxiv.org/abs/1610.01271}
}
\seealso{
\code{\link{s_learner}}, \code{\link{t_learner}}
}
